services:
  pg-user-1: &pg-user-common
    image: "bitnami/postgresql-repmgr:latest"
    restart: always
    container_name: pg-user-1
    environment: &pg-user-env
      POSTGRESQL_POSTGRES_PASSWORD: postgres
      POSTGRESQL_USERNAME: admin
      POSTGRESQL_PASSWORD: secret
      POSTGRESQL_DATABASE: user_service_db
      REPMGR_PRIMARY_HOST: pg-user-1
      REPMGR_PARTNER_NODES: pg-user-1,pg-user-2,pg-user-3
      REPMGR_NODE_NAME: pg-user-1
      REPMGR_NODE_NETWORK_NAME: pg-user-1
      REPMGR_USERNAME: repmgr
      REPMGR_PASSWORD: repmgr
    volumes:
      - pg_user_1_data:/bitnami/postgresql

  pg-user-2:
    <<: *pg-user-common
    container_name: pg-user-2
    environment:
      <<: *pg-user-env
      REPMGR_PARTNER_NODES: pg-user-1,pg-user-2,pg-user-3
      REPMGR_NODE_NAME: pg-user-2
      REPMGR_NODE_NETWORK_NAME: pg-user-2
    volumes:
      - pg_user_2_data:/bitnami/postgresql

  pg-user-3:
    <<: *pg-user-common
    container_name: pg-user-3
    environment:
      <<: *pg-user-env
      REPMGR_PARTNER_NODES: pg-user-1,pg-user-2,pg-user-3
      REPMGR_NODE_NAME: pg-user-3
      REPMGR_NODE_NETWORK_NAME: pg-user-3
    volumes:
      - pg_user_3_data:/bitnami/postgresql

  pgpool-user:
    image: "bitnami/pgpool:latest"
    restart: always
    container_name: pgpool-user
    environment:
      PGPOOL_BACKEND_NODES: 0:pg-user-1:5432,1:pg-user-2:5432,2:pg-user-3:5432
      PGPOOL_SR_CHECK_USER: repmgr
      PGPOOL_SR_CHECK_PASSWORD: repmgr
      PGPOOL_POSTGRES_USERNAME: postgres
      PGPOOL_POSTGRES_PASSWORD: postgres
      PGPOOL_ADMIN_USERNAME: admin
      PGPOOL_ADMIN_PASSWORD: secret
      PGPOOL_ENABLE_LOAD_BALANCING: yes
    ports:
      - "5000:5432"
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 5s
      timeout: 3s
      retries: 10

  pg-auth-1: &pg-auth-common
    image: "bitnami/postgresql-repmgr:latest"
    restart: always
    container_name: pg-auth-1
    environment: &pg-auth-env
      POSTGRESQL_POSTGRES_PASSWORD: postgres
      POSTGRESQL_USERNAME: admin
      POSTGRESQL_PASSWORD: secret
      POSTGRESQL_DATABASE: auth_service_db
      REPMGR_PRIMARY_HOST: pg-auth-1
      REPMGR_PARTNER_NODES: pg-auth-1,pg-auth-2,pg-auth-3
      REPMGR_NODE_NAME: pg-auth-1
      REPMGR_NODE_NETWORK_NAME: pg-auth-1
      REPMGR_USERNAME: repmgr
      REPMGR_PASSWORD: repmgr
    volumes:
      - pg_auth_1_data:/bitnami/postgresql

  pg-auth-2:
    <<: *pg-auth-common
    container_name: pg-auth-2
    environment:
      <<: *pg-auth-env
      REPMGR_PARTNER_NODES: pg-auth-1,pg-auth-2,pg-auth-3
      REPMGR_NODE_NAME: pg-auth-2
      REPMGR_NODE_NETWORK_NAME: pg-auth-2
    volumes:
      - pg_auth_2_data:/bitnami/postgresql

  pg-auth-3:
    <<: *pg-auth-common
    container_name: pg-auth-3
    environment:
      <<: *pg-auth-env
      REPMGR_PARTNER_NODES: pg-auth-1,pg-auth-2,pg-auth-3
      REPMGR_NODE_NAME: pg-auth-3
      REPMGR_NODE_NETWORK_NAME: pg-auth-3
    volumes:
      - pg_auth_3_data:/bitnami/postgresql

  pgpool-auth:
    image: "bitnami/pgpool:latest"
    restart: always
    container_name: pgpool-auth
    environment:
      PGPOOL_BACKEND_NODES: 0:pg-auth-1:5432,1:pg-auth-2:5432,2:pg-auth-3:5432
      PGPOOL_SR_CHECK_USER: repmgr
      PGPOOL_SR_CHECK_PASSWORD: repmgr
      PGPOOL_POSTGRES_USERNAME: postgres
      PGPOOL_POSTGRES_PASSWORD: postgres
      PGPOOL_ADMIN_USERNAME: admin
      PGPOOL_ADMIN_PASSWORD: secret
      PGPOOL_ENABLE_LOAD_BALANCING: yes
    ports:
      - "5001:5432"
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 5s
      timeout: 3s
      retries: 10

  pg-admin-1: &pg-admin-common
    image: "bitnami/postgresql-repmgr:latest"
    restart: always
    container_name: pg-admin-1
    environment: &pg-admin-env
      POSTGRESQL_POSTGRES_PASSWORD: postgres
      POSTGRESQL_USERNAME: admin
      POSTGRESQL_PASSWORD: secret
      POSTGRESQL_DATABASE: admin_service_db
      REPMGR_PRIMARY_HOST: pg-admin-1
      REPMGR_PARTNER_NODES: pg-admin-1,pg-admin-2,pg-admin-3
      REPMGR_NODE_NAME: pg-admin-1
      REPMGR_NODE_NETWORK_NAME: pg-admin-1
      REPMGR_USERNAME: repmgr
      REPMGR_PASSWORD: repmgr
    volumes:
      - pg_admin_1_data:/bitnami/postgresql

  pg-admin-2:
    <<: *pg-admin-common
    container_name: pg-admin-2
    environment:
      <<: *pg-admin-env
      REPMGR_PARTNER_NODES: pg-admin-1,pg-admin-2,pg-admin-3
      REPMGR_NODE_NAME: pg-admin-2
      REPMGR_NODE_NETWORK_NAME: pg-admin-2
    volumes:
      - pg_admin_2_data:/bitnami/postgresql

  pg-admin-3:
    <<: *pg-admin-common
    container_name: pg-admin-3
    environment:
      <<: *pg-admin-env
      REPMGR_PARTNER_NODES: pg-admin-1,pg-admin-2,pg-admin-3
      REPMGR_NODE_NAME: pg-admin-3
      REPMGR_NODE_NETWORK_NAME: pg-admin-3
    volumes:
      - pg_admin_3_data:/bitnami/postgresql

  pgpool-admin:
    image: "bitnami/pgpool:latest"
    restart: always
    container_name: pgpool-admin
    environment:
      PGPOOL_BACKEND_NODES: 0:pg-admin-1:5432,1:pg-admin-2:5432,2:pg-admin-3:5432
      PGPOOL_SR_CHECK_USER: repmgr
      PGPOOL_SR_CHECK_PASSWORD: repmgr
      PGPOOL_POSTGRES_USERNAME: postgres
      PGPOOL_POSTGRES_PASSWORD: postgres
      PGPOOL_ADMIN_USERNAME: admin
      PGPOOL_ADMIN_PASSWORD: secret
      PGPOOL_ENABLE_LOAD_BALANCING: yes
    ports:
      - "5002:5432"
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 5s
      timeout: 3s
      retries: 10

  pg-verification-1: &pg-verification-common
    image: "bitnami/postgresql-repmgr:latest"
    restart: always
    container_name: pg-verification-1
    environment: &pg-verification-env
      POSTGRESQL_POSTGRES_PASSWORD: postgres
      POSTGRESQL_USERNAME: verification
      POSTGRESQL_PASSWORD: secret
      POSTGRESQL_DATABASE: verification_service_db
      REPMGR_PRIMARY_HOST: pg-verification-1
      REPMGR_PARTNER_NODES: pg-verification-1,pg-verification-2,pg-verification-3
      REPMGR_NODE_NAME: pg-verification-1
      REPMGR_NODE_NETWORK_NAME: pg-verification-1
      REPMGR_USERNAME: repmgr
      REPMGR_PASSWORD: repmgr
    volumes:
      - pg_verification_1_data:/bitnami/postgresql

  pg-verification-2:
    <<: *pg-verification-common
    container_name: pg-verification-2
    environment:
      <<: *pg-verification-env
      REPMGR_PARTNER_NODES: pg-verification-1,pg-verification-2,pg-verification-3
      REPMGR_NODE_NAME: pg-verification-2
      REPMGR_NODE_NETWORK_NAME: pg-verification-2
    volumes:
      - pg_verification_2_data:/bitnami/postgresql

  pg-verification-3:
    <<: *pg-verification-common
    container_name: pg-verification-3
    environment:
      <<: *pg-verification-env
      REPMGR_PARTNER_NODES: pg-verification-1,pg-verification-2,pg-verification-3
      REPMGR_NODE_NAME: pg-verification-3
      REPMGR_NODE_NETWORK_NAME: pg-verification-3
    volumes:
      - pg_verification_3_data:/bitnami/postgresql

  pgpool-verification:
    image: "bitnami/pgpool:latest"
    restart: always
    container_name: pgpool-verification
    environment:
      PGPOOL_BACKEND_NODES: 0:pg-verification-1:5432,1:pg-verification-2:5432,2:pg-verification-3:5432
      PGPOOL_SR_CHECK_USER: repmgr
      PGPOOL_SR_CHECK_PASSWORD: repmgr
      PGPOOL_POSTGRES_USERNAME: postgres
      PGPOOL_POSTGRES_PASSWORD: postgres
      PGPOOL_ADMIN_USERNAME: admin
      PGPOOL_ADMIN_PASSWORD: secret
      PGPOOL_ENABLE_LOAD_BALANCING: yes
    ports:
      - "5003:5432"
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  pg_user_1_data:
  pg_user_2_data:
  pg_user_3_data:
  pg_auth_1_data:
  pg_auth_2_data:
  pg_auth_3_data:
  pg_admin_1_data:
  pg_admin_2_data:
  pg_admin_3_data:
  pg_verification_1_data:
  pg_verification_2_data:
  pg_verification_3_data:

networks:
  default:
    name: production
    external: true
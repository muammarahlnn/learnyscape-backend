services:
  kafka-1: &kafka-common
    image: "bitnami/kafka:latest"
    restart: always
    container_name: kafka-1
    environment: &kafka-env
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: DBjQXyO-S0SVA0Qs2Bcn-g
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 2
    volumes:
      - kafka_1_data:/bitnami/kafka
    healthcheck:
      test:
        [
          "CMD",
          "kafka-cluster.sh",
          "cluster-id",
          "--bootstrap-server localhost:9092 || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - production

  kafka-2:
    <<: *kafka-common
    container_name: kafka-2
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: 2
    volumes:
      - kafka_2_data:/bitnami/kafka

  kafka-3:
    <<: *kafka-common
    container_name: kafka-3
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: 3
    volumes:
      - kafka_3_data:/bitnami/kafka

volumes:
  kafka_1_data:
  kafka_2_data:
  kafka_3_data:

networks:
  production:
    name: production
    external: true